{"version":3,"sources":["logo.svg","Producer.js","Column.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Producer","index","state","setState","props","console","log","prices","number","name","Names","productGenTime","productGenTimes","useState","percentage","setPercentage","inProduction","setInProduction","useEffect","t","setInterval","newState","production","produce","clearInterval","className","onClick","disabled","max","value","minimumToAccess","Column","map","e","i","key","InitialPotatoesState","InitialLandState","InitialOreState","InitialMilitariesState","InitialPlacebosState","App","PotatoesState","setPotatoesState","LandState","setLandState","OreState","setOreState","MilitariesState","setMilitariesState","PlacebosState","setPlacebosState","activeColumn","setActiveColumn","chooseTab","target","getAttribute","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.5b028d97.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { useState, useEffect } from \"react\";\n\nfunction Producer({ index, state, setState, ...props }) {\n  console.log({ state, index, props });\n  const price = state.prices[index];\n  const number = state.number[index];\n  const name = state.Names[index];\n  const productGenTime = state.productGenTimes[index];\n  const [percentage, setPercentage] = useState(0);\n  const [inProduction, setInProduction] = useState(false);\n  const percentageRefrechRate = 1;\n  console.log(number);\n  function start() {\n    setPercentage(0);\n    setInProduction(true);\n  }\n\n  function buy() {\n    const newState = {\n      ...state,\n      number: [...state.number]\n    };\n    newState.number[index]++;\n    if (\n      state.number[index] < state.minimumToAccess[index + 1] &&\n      newState.number[index] >= newState.minimumToAccess[index + 1]\n    ) {\n      newState.number[index + 1] = 1;\n    }\n    setState(newState);\n  }\n\n  function produce() {\n    const newState = {\n      ...state,\n      number: [...state.number]\n    };\n    newState.number[index - 1] += state.number[index] * state.production[index];\n    setState(newState);\n  }\n\n  useEffect(() => {\n    const t = setInterval(() => {\n      if (percentage < 100 && inProduction) {\n        setPercentage(\n          percentage + (100 * percentageRefrechRate) / productGenTime\n        );\n      }\n      if (percentage >= 100 && inProduction) {\n        produce();\n        setInProduction(false);\n      }\n    }, percentageRefrechRate);\n\n    return () => clearInterval(t);\n  });\n\n  // useEffect(() => {\n  //   if (percentage >= 100) {\n  //     let newState = state;\n  //     setInProduction(false);\n  //   }\n  // }, [percentage]);\n\n  return (\n    <div className=\"Producer\">\n      <button onClick={start} disabled={inProduction}>\n        start\n      </button>\n      <div> {state.number[index]} </div>\n      <progress max=\"100\" value={percentage}>\n        {percentage}\n      </progress>\n      <button\n        onClick={buy}\n        // disabled={props.price > props.cash}\n      >\n        {\"buy a \" + name}\n      </button>\n    </div>\n  );\n}\n\nexport default Producer;\n","import React, { useState, useEffect } from \"react\";\nimport Producer from \"./Producer\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\nfunction Column({ name, state, setState }) {\n  console.log({ state });\n  return (\n    <div>\n      {state.Names.map(\n        (e, i) =>\n          state.number[i] > 0 &&\n          i > 0 && (\n            <Producer key={i} index={i} setState={setState} state={state} />\n          )\n      )}\n    </div>\n  );\n}\n\nexport default Column;\n","import React, { useState, useEffect } from \"react\";\nimport Column from \"./Column\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\nconst InitialPotatoesState = {\n  Names: [\n    \"Potatoes\",\n    \"Farmer\",\n    \"Commune\",\n    \"Freight\",\n    \"Plantation\",\n    \"Irrigation\",\n    \"Greenhouse\",\n    \"Barge\",\n    \"Cold storage\"\n  ],\n  number: [0, 1, 0, 0, 0, 0, 0, 0, 0],\n  prices: [0, 1, 1, 1, 1, 1, 1, 1, 1],\n  productGenTimes: [0, 100, 200, 400, 800, 1600, 3200, 6400, 12800],\n  production: [0, 1, 2, 4, 8, 16, 32, 64, 128],\n  minimumToAccess: [0, 0, 10, 25, 50, 100, 200, 400, 600]\n};\n\nconst InitialLandState = {\n  Names: [\n    \"Land\",\n    \"Worker\",\n    \"Clearcut\",\n    \"Road\",\n    \"Sewer\",\n    \"Coal Plant\",\n    \"Train\",\n    \"Harbour\",\n    \"Nuclear Plant\"\n  ],\n  number: [0, 1, 0, 0, 0, 0, 0, 0, 0],\n  prices: [0, 1, 1, 1, 1, 1, 1, 1, 1],\n  productGenTimes: [0, 1, 2, 4, 8, 16, 32, 64, 128],\n  production: [0, 1, 2, 4, 8, 16, 32, 64, 128],\n  minimumToAccess: [0, 0, 10, 25, 50, 100, 200, 400, 600]\n};\n\nconst InitialOreState = {\n  Names: [\n    \"Ore\",\n    \"Farmer\",\n    \"Commune\",\n    \"Freight\",\n    \"Plantation\",\n    \"Irrigation\",\n    \"Greenhouse\",\n    \"Barge\",\n    \"Cold storage\"\n  ],\n  number: [0, 1, 0, 0, 0, 0, 0, 0, 0],\n  prices: [0, 1, 1, 1, 1, 1, 1, 1, 1],\n  productGenTimes: [0, 1, 2, 4, 8, 16, 32, 64, 128],\n  production: [0, 1, 2, 4, 8, 16, 32, 64, 128],\n  minimumToAccess: [0, 0, 10, 25, 50, 100, 200, 400, 600]\n};\n\nconst InitialMilitariesState = {\n  Names: [\n    \"Bullets\",\n    \"Farmer\",\n    \"Commune\",\n    \"Freight\",\n    \"Plantation\",\n    \"Irrigation\",\n    \"Greenhouse\",\n    \"Barge\",\n    \"Cold storage\"\n  ],\n  number: [0, 1, 0, 0, 0, 0, 0, 0, 0],\n  prices: [0, 1, 1, 1, 1, 1, 1, 1, 1],\n  productGenTimes: [0, 1, 2, 4, 8, 16, 32, 64, 128],\n  production: [0, 1, 2, 4, 8, 16, 32, 64, 128],\n  minimumToAccess: [0, 0, 10, 25, 50, 100, 200, 400, 600]\n};\n\nconst InitialPlacebosState = {\n  Names: [\n    \"Placebos\",\n    \"Farmer\",\n    \"Commune\",\n    \"Freight\",\n    \"Plantation\",\n    \"Irrigation\",\n    \"Greenhouse\",\n    \"Barge\",\n    \"Cold storage\"\n  ],\n  number: [0, 1, 0, 0, 0, 0, 0, 0, 0],\n  prices: [0, 1, 1, 1, 1, 1, 1, 1, 1],\n  productGenTimes: [0, 1, 2, 4, 8, 16, 32, 64, 128],\n  production: [0, 1, 2, 4, 8, 16, 32, 64, 128],\n  minimumToAccess: [0, 0, 10, 25, 50, 100, 200, 400, 600]\n};\n\nfunction App() {\n  const [PotatoesState, setPotatoesState] = useState(InitialPotatoesState);\n  const [LandState, setLandState] = useState(InitialLandState);\n  const [OreState, setOreState] = useState(InitialOreState);\n  const [MilitariesState, setMilitariesState] = useState(\n    InitialMilitariesState\n  );\n  const [PlacebosState, setPlacebosState] = useState(InitialPlacebosState);\n\n  const [activeColumn, setActiveColumn] = useState(\"Potatoes\");\n\n  function chooseTab(e) {\n    switch (e.target.getAttribute(\"number\")) {\n      case \"1\":\n        setActiveColumn(\"Potatoes\");\n\n        break;\n      case \"2\":\n        setActiveColumn(\"Land\");\n\n        break;\n      case \"3\":\n        setActiveColumn(\"Ore\");\n\n        break;\n      case \"4\":\n        setActiveColumn(\"Militaries\");\n\n        break;\n      case \"5\":\n        setActiveColumn(\"Placebos\");\n\n        break;\n      default:\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"TabBar\">\n        <div onClick={chooseTab} number={1}>\n          {PotatoesState.number[0] + \" Potatoes\"}\n        </div>\n        <div onClick={chooseTab} number={2}>\n          {LandState.number[0] + \" Land\"}\n        </div>\n        <div onClick={chooseTab} number={3}>\n          {OreState.number[0] + \" Ore\"}\n        </div>\n        <div onClick={chooseTab} number={4}>\n          {MilitariesState.number[0] + \" Militaries\"}\n        </div>\n        <div onClick={chooseTab} number={5}>\n          {PlacebosState.number[0] + \" Placebos\"}\n        </div>\n      </div>\n      {activeColumn === \"Potatoes\" && (\n        <Column\n          state={PotatoesState}\n          setState={setPotatoesState}\n          name=\"Potatoes\"\n        />\n      )}\n      {activeColumn === \"Land\" && (\n        <Column state={LandState} setState={setLandState} name=\"Land\" />\n      )}\n\n      {activeColumn === \"Ore\" && (\n        <Column state={OreState} setState={setOreState} name=\"Ore\" />\n      )}\n\n      {activeColumn === \"Militaries\" && (\n        <Column\n          state={MilitariesState}\n          setState={setMilitariesState}\n          name=\"Militaries\"\n        />\n      )}\n\n      {activeColumn === \"Placebos\" && (\n        <Column\n          state={PlacebosState}\n          setState={setPlacebosState}\n          name=\"Placebos\"\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}